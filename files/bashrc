[[ $- != *i*  ]] && return
[[ $TERM != screen*  ]] && exec tmux

######## Env Variables ##########

BASE_PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
export PATH=$HOME/bin:$HOME/.gem/ruby/1.8/bin:$BASE_PATH

export HISTFILESIZE=10000
export HISTCONTROL=ignoredups

export TEXPATH=~/.tex
export TEXINPUTS=$TEXINPUTS:$TEXPATH

export VISUAL=view
export EDITOR=vim

######## Shell improvement ########

. /etc/bash_completion

shopt -s cdspell
shopt -s checkhash
shopt -s checkwinsize
shopt -s dotglob
shopt -s histreedit
shopt -s nocaseglob

[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

######## Useful aliases ########

alias l='ls -lh --color=auto'
alias la='ls -Alh --color=auto'
alias rm='rm -i'
alias rr='rm -rf'
alias md='mkdir -p'
alias c='clear'

alias now='date +%Y%m%d%H%M%S'

alias suvi='sudo vim'
alias suvim='suvi'

alias reboot='sudo reboot'
alias halt='sudo poweroff'

alias utarg='tar -zxvf'
alias utarb='tar -jxvf'
alias targ='tar -zcvf'
alias tarb='tar -jcvf'

alias apti='sudo apt-get install'
alias aptu='sudo apt-get update'
alias aptg='sudo apt-get dist-upgrade'
alias aptr='sudo apt-get remove --purge'
alias apts='apt-cache search'

alias sudo='sudo '

alias ipmi='ipmitool -I lanplus -U ADMIN -H'

######## Functions ########

function git_br {
  b=$(git symbolic-ref HEAD 2>/dev/null); [ "$b" ] && echo ${b##*/}
}

function git_rbm {
  branch=$(git_br)
  if [ $branch  ]; then
    if [ $branch != "master"  ]; then
      git co master
    fi
    git pull && git co $1 && git rebase
  else
    echo "Not a git repo"
  fi
}

function git_prompt {
  b=$(git_br); [ "$b" ] && echo -n "($b) "
}

function load_ssh_keys {
  if [ -n $SSH_AUTH_SOCK ]; then
    for key in $(find $HOME/.ssh -name '*_rsa'); do
      if [ `/usr/bin/ssh-add -l | grep $key | wc -l` -ne 1 ]; then
        /usr/bin/ssh-add $key
      fi
    done
  fi
}

function load_rvm_env {
  [[ -r $HOME/.rvm/scripts/rvm ]] && . $HOME/.rvm/scripts/rvm
  [[ -r $HOME/.rvm/scripts/completion ]] && . $HOME/.rvm/scripts/completion
}

######## Fancy prompt ########

WHI='\[\033[00m\]'
RED='\[\033[1;31m\]'
GRE='\[\033[1;32m\]'
BLU='\[\033[1;34m\]'
END='$'

PS1="\$(rc=\$?;
echo -en '$RED\u@\h$WHI:$BLU\w $GRE'
git_prompt
[ \$rc -eq 0 ] && echo -en '$WHI$END$WHI ' || echo -en '$RED$END$WHI '
)"

PROMPT_COMMAND=

load_ssh_keys
load_rvm_env
